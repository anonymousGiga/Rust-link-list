[ptr] -> (Elem A, ptr) -> (Elem B, *null*)



list1 -> A ---+
              |
              v
list2 ------> B -> C -> D
              ^
              |
list3 -> X ---+


list1 = (A, list2)
list2 = (B, C, D)
list3 = (X, list2)

//解释append
//list2.head = B
list2 = (B, C, D)
//调用list2.append的时候，self.head 指向X，next指向B，实际上是让B引用计数+1
list3 = (X, list2)
//返回的就是list3


//解释tail
list1 = (A, list2)
list2 = (B, C, D)

//list = list1
//调用list1的tail：self.head = A; head = self.head.next(B的引用计数+1)
//返回的就是list2

Refcell
